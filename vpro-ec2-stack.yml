---
- name: Setup vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup variables
      include_vars: vars/vpc_setup

    - name: Import VPC setup output variables
      include_vars: vars/output_vars   # Import variables from the 'vars/output_vars' file.

    - name: Import vprofile setup variables
      include_vars: vars/vprostack_setup

    - name: Create vprofile ec2 key
      ec2_key:
        name: vpro-key        # Name of the EC2 key pair to be created.
        region: "{{region}}"      # AWS region where the key pair will be created.
      register: vprokey_out           # Store the output of this task in the 'key_out' variable.

    - name: Save private key into file vpro-key.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"  # Private key generated in the previous task.
        dest: ./vpro-key.pem                 # Destination path for saving the private key.
        mode: 0600                              # Set permissions on the private key file.
      when: vprokey_out.changed                     # Conditionally execute this task when the private key changes.

    - name: Create Security group for Load Balancer
      ec2_group:
        name: vpro-elb-SG                 # Name of the security group for Load Balancer
        description: Allow port 80 from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"              # ID of the VPC to associate the security group with.
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
      register: vpro_ELB_SG_out            # Store the output of this task in 'BastionSG_out'.

    - name: Create Security group for vprofile stack
      ec2_group:
        name: vpro-stack-SG                 # Name of the security group for Load Balancer
        description: Allow port 22 from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"              # ID of the VPC to associate the security group with.
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vpro_ELB_SG_out.group_id}}"
            rule_desc: allow traffic to Load Balancer on port 80

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
            rule_desc: allow all on port 80

      register: vpro_ELB_SG_out            # Store the output of this task in 'BastionSG_out'.